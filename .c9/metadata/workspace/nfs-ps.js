{"filter":false,"title":"nfs-ps.js","tooltip":"/nfs-ps.js","undoManager":{"mark":2,"position":2,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":171,"column":0}},"lines":[" * nfs-ps.js"," * A Node.js utility for crawling a local file system."," * Copyright (C) 2014 James M. Duran"," *"," * This program is free software: you can redistribute it and/or modify"," * it under the terms of the GNU General Public License as published by"," * the Free Software Foundation, either version 3 of the License, or"," * (at your option) any later version."," *"," * This program is distributed in the hope that it will be useful,"," * but WITHOUT ANY WARRANTY; without even the implied warranty of"," * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"," * GNU General Public License for more details."," *"," * You should have received a copy of the GNU General Public License"," * along with this program.  If not, see <http://www.gnu.org/licenses/>."," */","var path = require(\"path\");","var fs = require(\"fs\");","","var NFSPS = {","    /**","     * Indicates how FileSystemCrawler will handle the files it encounters.","     * ","     * BY_FILE - cbparse callback invoked each time it encounters a file","     * ALL_FILES - cbparse callback invoked at end and passed an array of files","     */","    CrawlerMode: {","        BY_FILE: 0,","        ALL_FILES: 1","    },","    ","    /**","     * Indicates which files/directories FileSystem crawler will return to the ","     * cbparse callback.","     * ","     * NO_FILTER - Returns all files and directories","     * ONLY_PDF - Returns only pdf files, no directories","     * ONLY_DIR - Returns only directories, no files","     * NO_DIR - Returns all files, no directories","     */","    FilterMode: {","        NO_FILTER: 0,","        ONLY_PDF: 1,","        ONLY_DIR: 2,","        NO_DIR: 3","    },","","    /**","     * config:","     *  dir - Directory path where the crawler should start","     *  mode - Indicates how crawler will call callback (see NFSPS.CrawlerMode)","     *  filter - Indicates the files crawler will return (see NFSPS.FilterMode)","     *  cbstart - Invoked when the directory crawler algorithm is started","     *  cbparse(err, data) - returns a file or an array of files (data)","     *  cbend - Invoked when the directory crawler algorithm has completed","     */","    FileSystemCrawler: function(config) {","        var results = [];","","        /**","         * Main crawler function, which is executed recursively to crawl a ","         * specified directory.","         * ","         * dir - Directory name for the crawler to visit/walk","         * finished - Callback invoked once the algorithm has completed","         */","        var walk = function(dir, finished) {","            fs.readdir(dir, function(err, list) {","                var pending = list.length;","","                if (err || !pending)","                    return finished(err, results);","","                list.forEach(function(file) {","                    var dfile = dir + \"/\" + file;","","                    fs.stat(dfile, function(err, stat) {","                        // Recursively call walk to visit the new directory.","                        if (stat !== undefined && stat.isDirectory()) {","                            return walk(dfile, function(err, res) {","                                !--pending && finished(null, results);","                            });","                        }","","                        if (config.mode === NFSPS.CrawlerMode.BY_FILE)","                            config.cbparse(null, dfile);","                        else","                            results.push(dfile);","","                        !--pending && finished(null, results);","                    });","                });","            });","        };","","        return {","            /**","             * Main method which starts the crawler utility.","             */","            crawl: function() {","                if (config.cbstart !== undefined)","                    config.cbstart();","","                // cbend callbacks will be invoked depending on the mode.","                walk(config.dir, function(err, data) {","","                    if (config.mode === NFSPS.CrawlerMode.ALL_FILES) {","                        config.cbend();","                        config.cbparse(err, data);","                    }","","                    if (config.mode === NFSPS.CrawlerMode.BY_FILE)","                        config.cbend();","                });","            }","        };","    }","};","","/**"," * Test App"," *  Sample directory: ./test"," */","var TESTAPP = (function() {","    var allFilesConfig = {","        dir: \".\",","        mode: NFSPS.CrawlerMode.ALL_FILES,","","        cbstart: function() {","            console.log(\"=== ALL_FILES crawler mode has begun ===\");","        },","","        cbparse: function(err, data) {","            data.forEach(function(file) {","                console.log(\"ALL_FILES: \" + file);","            });","        },","","        cbend: function() {","            console.log(\"=== ALL_FILES crawler mode has finished ===\");","        }","    };","","    var byFileConfig = {","        dir: \".\",","        mode: NFSPS.CrawlerMode.BY_FILE,","","        cbstart: function() {","            console.log(\"=== BY_FILE crawler mode has begun ===\");","        },","","        cbparse: function(err, data) {","            console.log(\"BY_FILE: \" + data);","        },","","        cbend: function() {","            console.log(\"=== BY_FILE crawler mode has finished ===\");","        }","    };","","    return {","        start: function() {","            var allFilesCrawler = new NFSPS.FileSystemCrawler(allFilesConfig);","            allFilesCrawler.crawl();","","            var byFileCrawler = new NFSPS.FileSystemCrawler(byFileConfig);","            byFileCrawler.crawl();","        }","    };"]},{"action":"insertText","range":{"start":{"row":171,"column":0},"end":{"row":171,"column":13}},"text":"})().start();"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":171,"column":0},"end":{"row":171,"column":13}},"text":"})().start();"},{"action":"removeLines","range":{"start":{"row":120,"column":0},"end":{"row":171,"column":0}},"nl":"\n","lines":["","/**"," * Test App"," *  Sample directory: ./test"," */","var TESTAPP = (function() {","    var allFilesConfig = {","        dir: \".\",","        mode: NFSPS.CrawlerMode.ALL_FILES,","","        cbstart: function() {","            console.log(\"=== ALL_FILES crawler mode has begun ===\");","        },","","        cbparse: function(err, data) {","            data.forEach(function(file) {","                console.log(\"ALL_FILES: \" + file);","            });","        },","","        cbend: function() {","            console.log(\"=== ALL_FILES crawler mode has finished ===\");","        }","    };","","    var byFileConfig = {","        dir: \".\",","        mode: NFSPS.CrawlerMode.BY_FILE,","","        cbstart: function() {","            console.log(\"=== BY_FILE crawler mode has begun ===\");","        },","","        cbparse: function(err, data) {","            console.log(\"BY_FILE: \" + data);","        },","","        cbend: function() {","            console.log(\"=== BY_FILE crawler mode has finished ===\");","        }","    };","","    return {","        start: function() {","            var allFilesCrawler = new NFSPS.FileSystemCrawler(allFilesConfig);","            allFilesCrawler.crawl();","","            var byFileCrawler = new NFSPS.FileSystemCrawler(byFileConfig);","            byFileCrawler.crawl();","        }","    };"]},{"action":"removeText","range":{"start":{"row":119,"column":2},"end":{"row":120,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":119,"column":2},"end":{"row":120,"column":0}},"text":"\n"}]}]]},"ace":{"folds":[],"scrolltop":60,"scrollleft":0,"selection":{"start":{"row":111,"column":18},"end":{"row":111,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"doc-start","mode":"ace/mode/javascript"}},"timestamp":1406320888390,"hash":"c045869290f23a35f1e894175e9d815adfd01880"}